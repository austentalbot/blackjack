// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

window.AppView = (function(_super) {
  __extends(AppView, _super);

  function AppView() {
    return AppView.__super__.constructor.apply(this, arguments);
  }

  AppView.prototype.template = _.template('<div class="buttons"> <div class="hit-button active">Hit</div> <div class="stand-button active">Stand</div> <div class="inc-button active">Increase Bet $5</div> <div class="dec-button active">Decrease Bet $5</div> <div class="bet"></div> </div> <div class="playerView"> <div class="scores myScore"></div> <div class="scores dealerScore"></div> <div class="scores money"></div> <div class="player-hand-container"></div> <div class="dealer-hand-container"></div> </div>');

  AppView.prototype.events = {
    "click .hit-button.active": function() {
      $('.inc-button').removeClass('active');
      $('.dec-button').removeClass('active');
      return this.model.get('playerHand').hit();
    },
    "click .stand-button.active": function() {
      $('.inc-button').removeClass('active');
      $('.dec-button').removeClass('active');
      return this.model.get('playerHand').stand();
    },
    "click .inc-button.active": function() {
      return this.model.increaseBet();
    },
    "click .dec-button.active": function() {
      return this.model.decreaseBet();
    },
    "change @model.get 'money'": function() {
      if ((AppView.model.get('money')) <= 0) {
        $('.hit-button').removeClass('active');
        $('.stand-button').removeClass('active');
        $('.inc-button').removeClass('active');
        return $('.dec-button').removeClass('active');
      }
    }
  };

  AppView.prototype.initialize = function() {
    this.render();
    this.model.on('noMoney', (function(_this) {
      return function() {
        $('.hit-button').removeClass('active');
        $('.stand-button').removeClass('active');
        $('.inc-button').removeClass('active');
        $('.dec-button').removeClass('active');
        $('body').append('<div class="lose"> GAME OVER </div>');
        $('.lose').css({
          top: $('body').height() * .2,
          left: $('body').width() * .2,
          position: 'absolute'
        });
        return console.log('poor!');
      };
    })(this));
    return this.model.on('change', (function(_this) {
      return function() {
        _this.render();
        if ((_this.model.get('money')) <= 0) {
          $('.hit-button').removeClass('active');
          return $('.stand-button').removeClass('active');
        }
      };
    })(this));
  };

  AppView.prototype.render = function() {
    this.$el.children().detach();
    this.$el.html(this.template());
    this.$('.myScore').text('Hands won: ' + this.model.get('myScore'));
    this.$('.dealerScore').text('Hands lost: ' + this.model.get('dealerScore'));
    this.$('.money').text('Money: $' + this.model.get('money'));
    this.$('.bet').text('Bet: $' + this.model.get('bet'));
    this.$('.player-hand-container').html(new HandView({
      collection: this.model.get('playerHand')
    }).el);
    return this.$('.dealer-hand-container').html(new HandView({
      collection: this.model.get('dealerHand')
    }).el);
  };

  return AppView;

})(Backbone.View);
